[build-system]
requires = ["setuptools>=41", "wheel", "setuptools-git-versioning>=2.0,<3"]
build-backend = "setuptools.build_meta"

[project]
name = "dependency-license-collector"
version = "0.1.0"
description = "Collect license data of dependency packages"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "click>=8.1.8",
    "click-help-colors>=0.9.4",
    "jinja2>=3.1.5",
    "packaging>=24.2",
    "pydantic>=2.10.4",
    "pydantic-settings>=2.7.0",
    "requests>=2.32.3",
    "rich>=13.9.4",
    "tenacity>=9.0.0",
    "typing-extensions>=4.12.2",
]

[project.scripts]
dlc = "dlc.cli:main"

[dependency-groups]
dev = [
    "mypy>=1.14.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.4",
    "types-requests>=2.32.0.20241016",
]

[tool.mypy]
sqlite_cache = true

[tool.ruff.lint]
extend-select = [
    "A",
    "ANN",
    "DTZ",
    "EM",
    "ERA",
    "FBT",
    "G",
    "INP",
    "LOG",
    "N",
    "PLR",
    "PT",
    "S",
    "T20",
]
ignore = [
    "ANN002",  # Missing type annotation for `*args`
    "EM101",   # Exception must not use a string literal, assign to variable first
    "S101",    # Use of `assert` detected
    "PLR2004", # Magic value used in comparison, consider replacing `200` with a constant variable
]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["callMethod"]

[tool.ruff.lint.per-file-ignores]
"conftest.py" = ["D", "INP001"]
"test_*.py" = ["ANN", "D"]

[tool.ruff.lint.isort]
known-first-party = ["dlc"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --cov=dlc --cov-report=term-missing --log-format='%(levelname)-8s %(name)-32s %(message)s' --log-level=INFO --log-disable=requests --log-file=test.log --tb=short"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
dlc = ["templates/*"]
